# docker-compose.yml

version: '1'
services:
  db:
    image: "postgres:16.0-alpine"
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pg_development

  # app:
  #   image: node:10.12.0
  #   working_dir: /books
  #   entrypoint: ["/bin/bash", "./entrypoint.sh"]
    
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - .:/restify-pg
  #   environment:
  #     DB_HOST: db

  # OpenTelemetry Collector
  # otelcol:
  #   image: otel/opentelemetry-collector-contrib:0.86.0
  #   container_name: otel-col
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 125M
  #   restart: unless-stopped
  #   command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-observability.yml", "--config=/etc/otelcol-config-extras.yml" ]
  #   volumes:
  #     - ./src/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
  #     - ./src/otelcollector/otelcol-observability.yml:/etc/otelcol-observability.yml
  #     - ./src/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
  #   ports:
  #     - "4317"          # OTLP over gRPC receiver
  #     - "4318:4318"     # OTLP over HTTP receiver
  #     - "9464"          # Prometheus exporter
  #     - "8888"          # metrics endpoint
  #   depends_on:
  #     - jaeger
  #   logging: *logging

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.1
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

# networks:
#   default:
#     name: milvus